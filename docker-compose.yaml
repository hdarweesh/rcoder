version: '3'
services:
  backend:
    build:
      context: backend
      target: builder
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
      LOGSTASH_HOST: logstash
      LOGSTASH_PORT: 5044
    ports:
      - "8080:8080"
    networks:
      - kafka-network
      - frontend_network

  ### Go Executor
  executor-go:
    build:
      context: ./executors/go
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - kafka-network

  ### Python Executor
  executor-python:
    build:
      context: ./executors/python
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - kafka-network

  executor-nodejs:
    build:
      context: ./executors/nodejs
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - kafka-network

  ### Zookeeper (Manages Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-network

  ### Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.4.3
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - kafka-network

  frontend:
    build:
      context: ./frontend
    ports:
      - '3000:80'
    networks:
      - frontend_network
    depends_on:
      - backend

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
  frontend_network:
    driver: bridge